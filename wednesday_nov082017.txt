mysql> create database csc4500_world;
Query OK, 1 row affected (0.00 sec)

mysql> use csc4500_world;
Database changed
mysql> create table City Like world.city;
Query OK, 0 rows affected (0.04 sec)

mysql> create table City Like world.country;
ERROR 1050 (42S01): Table 'city' already exists
mysql> create table Country Like world.country;
Query OK, 0 rows affected (0.02 sec)

mysql> create table Language  Like world.language;
ERROR 1146 (42S02): Table 'world.language' doesn't exist
mysql> create table CountryLanguage Like world.countrylanguage;
Query OK, 0 rows affected (0.03 sec)

mysql> insert into city select * from world.city;
Query OK, 4079 rows affected (0.11 sec)
Records: 4079  Duplicates: 0  Warnings: 0

mysql> insert into country select * from world.country;
Query OK, 239 rows affected (0.02 sec)
Records: 239  Duplicates: 0  Warnings: 0

mysql> insert into countrylanguage select * from world.countrylanguage;
Query OK, 984 rows affected (0.03 sec)
Records: 984  Duplicates: 0  Warnings: 0

mysql> alter table city engine = 'InnoDB';
Query OK, 0 rows affected (0.14 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> alter table country engine = 'InnoDB';
Query OK, 0 rows affected (0.11 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> alter table countrylanguage engine = 'InnoDB';
Query OK, 0 rows affected (0.13 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> select name, type from mysql.proc
    -> ;
+-------------------------------------+-----------+
| name                                | type      |
+-------------------------------------+-----------+
| create_synonym_db                   | PROCEDURE |
| diagnostics                         | PROCEDURE |
| execute_prepared_stmt               | PROCEDURE |
| extract_schema_from_file_name       | FUNCTION  |
| extract_table_from_file_name        | FUNCTION  |
| format_bytes                        | FUNCTION  |
| format_path                         | FUNCTION  |
| format_statement                    | FUNCTION  |
| format_time                         | FUNCTION  |
| list_add                            | FUNCTION  |
| list_drop                           | FUNCTION  |
| ps_is_account_enabled               | FUNCTION  |
| ps_is_consumer_enabled              | FUNCTION  |
| ps_is_instrument_default_enabled    | FUNCTION  |
| ps_is_instrument_default_timed      | FUNCTION  |
| ps_is_thread_instrumented           | FUNCTION  |
| ps_setup_disable_background_threads | PROCEDURE |
| ps_setup_disable_consumer           | PROCEDURE |
| ps_setup_disable_instrument         | PROCEDURE |
| ps_setup_disable_thread             | PROCEDURE |
| ps_setup_enable_background_threads  | PROCEDURE |
| ps_setup_enable_consumer            | PROCEDURE |
| ps_setup_enable_instrument          | PROCEDURE |
| ps_setup_enable_thread              | PROCEDURE |
| ps_setup_reload_saved               | PROCEDURE |
| ps_setup_reset_to_default           | PROCEDURE |
| ps_setup_save                       | PROCEDURE |
| ps_setup_show_disabled              | PROCEDURE |
| ps_setup_show_disabled_consumers    | PROCEDURE |
| ps_setup_show_disabled_instruments  | PROCEDURE |
| ps_setup_show_enabled               | PROCEDURE |
| ps_setup_show_enabled_consumers     | PROCEDURE |
| ps_setup_show_enabled_instruments   | PROCEDURE |
| ps_statement_avg_latency_histogram  | PROCEDURE |
| ps_thread_account                   | FUNCTION  |
| ps_thread_id                        | FUNCTION  |
| ps_thread_stack                     | FUNCTION  |
| ps_thread_trx_info                  | FUNCTION  |
| ps_trace_statement_digest           | PROCEDURE |
| ps_trace_thread                     | PROCEDURE |
| ps_truncate_all_tables              | PROCEDURE |
| quote_identifier                    | FUNCTION  |
| statement_performance_analyzer      | PROCEDURE |
| sys_get_config                      | FUNCTION  |
| table_exists                        | PROCEDURE |
| version_major                       | FUNCTION  |
| version_minor                       | FUNCTION  |
| version_patch                       | FUNCTION  |
+-------------------------------------+-----------+
48 rows in set (0.01 sec)

mysql> drop table if exists birthdays;
Query OK, 0 rows affected, 1 warning (0.00 sec)

mysql> create table birthdays(
    -> LAST_NAME VARCHAR(20), FIRST_NAME VARCHAR(20), BDATE DATE, BMONTH INT);
Query OK, 0 rows affected (0.03 sec)

mysql> show tables;
+-------------------------+
| Tables_in_csc4500_world |
+-------------------------+
| birthdays               |
| city                    |
| country                 |
| countrylanguage         |
+-------------------------+
4 rows in set (0.00 sec)

mysql> desc birthdays;
+------------+-------------+------+-----+---------+-------+
| Field      | Type        | Null | Key | Default | Extra |
+------------+-------------+------+-----+---------+-------+
| LAST_NAME  | varchar(20) | YES  |     | NULL    |       |
| FIRST_NAME | varchar(20) | YES  |     | NULL    |       |
| BDATE      | date        | YES  |     | NULL    |       |
| BMONTH     | int(11)     | YES  |     | NULL    |       |
+------------+-------------+------+-----+---------+-------+
4 rows in set (0.00 sec)

mysql> create trigger birthdays_be4_insert BEFORE INSERT ON birthdays
    -> for each row 
    -> set new.bmonth = MONTH(NEW.bdate);
Query OK, 0 rows affected (0.03 sec)

mysql> select * from birthdays
    -> ;
Empty set (0.00 sec)

mysql> INSERT INTO birthdays(LAST_NAME, FIRST_NAME, BDATE)
    -> VALUES('Lambert', 'Ann', '1996-05-15');
Query OK, 1 row affected (0.01 sec)

mysql> select * from birthdays
    -> ;
+-----------+------------+------------+--------+
| LAST_NAME | FIRST_NAME | BDATE      | BMONTH |
+-----------+------------+------------+--------+
| Lambert   | Ann        | 1996-05-15 |      5 |
+-----------+------------+------------+--------+
1 row in set (0.00 sec)

mysql> INSERT INTO birthdays(LAST_NAME, FIRST_NAME, BDATE) VALUES('Thompson', 'Becky', '2002-09-13');
Query OK, 1 row affected (0.00 sec)

mysql> select * from birthdays
    -> ;
+-----------+------------+------------+--------+
| LAST_NAME | FIRST_NAME | BDATE      | BMONTH |
+-----------+------------+------------+--------+
| Lambert   | Ann        | 1996-05-15 |      5 |
| Thompson  | Becky      | 2002-09-13 |      9 |
+-----------+------------+------------+--------+
2 rows in set (0.00 sec)

mysql> DELIMITER //
mysql> create trigger birthdays_be4 BEFORE UPDATE ON birthdays
    -> for each row
    -> begin
    -> if new.bdate <> old.bdate then 
    -> set new.bmonth = month(new.bdate).
    -> end if;
    -> end //
ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '.
end if;
end' at line 5
mysql> create trigger birthdays_be4 BEFORE UPDATE ON birthdays for each row begin if new.bdate <> old.bdate then  set new.bmonth = month(new.bdate) end if; end//
ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if; end' at line 1
mysql> create trigger birthdays_be4 BEFORE UPDATE ON birthdays for each row begin if new.bdate <> old.bdate then  set new.bmonth = month(new.bdate); end if; end//
Query OK, 0 rows affected (0.03 sec)

mysql> delimiter;
    -> UPDATE birthdays SET bdate = '1998-11-12' where last_name = 'Thompson';
    -> ;
    ->  ;
    -> //
ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'delimiter;UPDATE birthdays SET bdate = '1998-11-12' where last_name = 'Thompson'' at line 1
mysql> delimiter ;
mysql> UPDATE birthdays SET bdate = '1998-11-12' where last_name = 'Thompson';
Query OK, 1 row affected (0.01 sec)
Rows matched: 1  Changed: 1  Warnings: 0

mysql> exit
